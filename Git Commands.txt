$ git config --global user.email  "souravganesh.crp@gmail.com"
$ git config --global user.name  "SouravGanesh"

create directory - folder
put all the things you want to write or create new files inside folder
-> git init
to see things which are not yet in staging area use -> git status
to add it to staging area git add file_name
git add . -> to add all files inside folder
git commit -m "message" 
git log -> to check logs of commit, which commit was made by whome and when


create new file to check version control
again repesat same steps

messup the chapter 2 file
now to check out the diffrence between the previously commited one and messedup file
-> git diff file_name

to rollbock to previous version -> git checkout file_name


to push local(.git) to remote repo(GitHub)
create new repo and copy the link
git remote add origin url-link-of-repo
git push -u origin master (-u links the local origin to remote master)


gitignore:
if we want not to push sertain files to remote publically. like settings or api keys or passwords
create .gitignore file
add the names of the files you dont want to commit
then continue with the normal steps


if we want to download any scelition from github then we use cloning
git clone url


Branching and Mearging
if we want to play around creating extra features and dont want to disturb main goal then we create Branh 
and we work paralelly and if its working good then we can commit to main in feature in and time.
we prefer to submit to main only the once which are tested and ready to deploy.

git branch branch_name -> to create new branch
git branch -> to view
* says we the currently in which branch
git checkout branch_name -> will shift to branch_name from main

